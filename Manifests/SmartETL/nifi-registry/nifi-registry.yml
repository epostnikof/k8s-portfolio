---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi-registry
  labels:
    name: nifi-registry
    app: nifi-registry
  annotations:
    app.kubernetes.io/name: nifi-registry
    app.kubernetes.io/part-of: nifi-registry
spec:
  revisionHistoryLimit: 1
  serviceName: nifi-registry
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: nifi-registry
  template:
    metadata:
      labels:
        app: nifi-registry
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: false
      setHostnameAsFQDN: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: false
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: nifi-registry
          image: epostnikof/nifi-registry-domain:1.24.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 18080
              name: http
            - containerPort: 18443
              name: https
          livenessProbe:
            exec:
              command:
                - pgrep
                - java
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP # Use pod ip
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name # Use pod name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace # Use pod namespace
            - name: NIFI_REGISTRY_UI_BANNER_TEXT
              value: $(POD_NAME) # Use pod name for banner
            - name: NIFI_REGISTRY_WEB_HTTPS_HOST
              value: $(POD_NAME).nifi-registry.$(POD_NAMESPACE).svc.cluster.local # Use pod fqdn as web host
            - name: NIFI_REGISTRY_CLUSTER_NODE_ADDRESS
              value: $(POD_NAME).nifi-registry.$(POD_NAMESPACE).svc.cluster.local # Use pod fqdn as node address
            - name: NIFI_REGISTRY_REMOTE_INPUT_SOCKET_HOST
              value: $(POD_NAME).nifi-registry.$(POD_NAMESPACE).svc.cluster.local # Use pod fqdn as input socket address
            - name: NIFI_REGISTRY_REMOTE_INPUT_HOST
              value: $(POD_NAME).nifi-registry.$(POD_NAMESPACE).svc.cluster.local # Use pod fqdn as input host address
            - name: HOSTNAME
              value: $(POD_IP) # Use pod ip as hostname
            - name: NODE_IDENTITY
              value: $(POD_NAME) # Use pod name as identity

          envFrom:
            - configMapRef:
                name: nifi-registry-cm
                optional: false
          volumeMounts:
            ### NFS
            - name: nfs-pv-nifi-data
              mountPath: /opt/nifi-registry/nifi-registry-current/keytool
              subPath: keytool
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/extensions
              subPath: extensions
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/lib/postgresql-42.2.2.jar
              subPath: custom-libs/postgresql-42.2.2.jar
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/flow_storage
              subPath: flow_storage
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/volume_conf/authorizers.xml
              subPath: conf/authorizers.xml
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/volume_conf/identity-providers.xml
              subPath: conf/identity-providers.xml
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/volume_conf/providers.xml
              subPath: conf/providers.xml
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/volume_conf/registry-aliases.xml
              subPath: conf/registry-aliases.xml
              readOnly: false
            #Experemental
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/conf/authorizations.xml
              subPath: conf/authorizations.xml
              readOnly: false
            - name: nfs-pv-nifireg-data
              mountPath: /opt/nifi-registry/nifi-registry-current/conf/users.xml
              subPath: conf/users.xml
              readOnly: false
            # Доменный сертификат
            - name: cert-and-key
              mountPath: /etc/ssl/certs/keycloak.crt
              subPath: keycloak.crt
              readOnly: false
            - name: cert-and-key
              mountPath: /etc/ssl/certs/keycloak.key
              subPath: keycloak.key
              readOnly: false
            # Нужен для взаимодействия подов друг с другом
            - name: inside-cluster-ssl
              mountPath: /etc/ssl/certs/cluster.crt
              subPath: cluster.crt
              readOnly: false
            - name: inside-cluster-ssl
              mountPath: /etc/ssl/certs/cluster.key
              subPath: cluster.key
              readOnly: false
            - name: start-script
              mountPath: /opt/nifi-registry/scripts/start.sh
              subPath: start-nr.sh
              readOnly: false
          resources:
            requests:
              cpu: 400m
              memory: 2Gi
            limits:
              cpu: 400m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: nfs-pv-nifireg-data
          persistentVolumeClaim:
            claimName: nfs-pvc-nifireg-data
        - name: start-script
          configMap:
            name: start-nr.sh
            optional: false
            defaultMode: 0755
        - name: cert-and-key
          secret:
            secretName: cluster-k8s-ov-universe-data-ru-tls
            items:
              - key: tls.crt
                path: keycloak.crt
              - key: tls.key
                path: keycloak.key
                mode: 0600
        - name: inside-cluster-ssl
          secret:
            secretName: nifi-registry-cluster-secret
            items:
              - key: tls.crt
                path: cluster.crt
              - key: tls.key
                path: cluster.key
                mode: 0600
        # Будем смотреть в Truststore и Keystore NiFi
        - name: nfs-pv-nifi-data
          persistentVolumeClaim:
            claimName: nfs-pvc-nifi-data
